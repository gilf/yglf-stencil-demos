/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import { CollapsiblePanel as CollapsiblePanel } from './components/collapsible-panel/collapsible-panel';

interface HTMLCollapsiblePanelElement extends CollapsiblePanel, HTMLElement {
}
declare var HTMLCollapsiblePanelElement: {
  prototype: HTMLCollapsiblePanelElement;
  new (): HTMLCollapsiblePanelElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "collapsible-panel": HTMLCollapsiblePanelElement;
  }
  interface ElementTagNameMap {
      "collapsible-panel": HTMLCollapsiblePanelElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "collapsible-panel": JSXElements.CollapsiblePanelAttributes;
      }
  }
  namespace JSXElements {
      export interface CollapsiblePanelAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
          title?: string
      }
  }
}

import { MyComponent as MyComponent } from './components/my-component/my-component';

interface HTMLMyComponentElement extends MyComponent, HTMLElement {
}
declare var HTMLMyComponentElement: {
  prototype: HTMLMyComponentElement;
  new (): HTMLMyComponentElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "my-component": HTMLMyComponentElement;
  }
  interface ElementTagNameMap {
      "my-component": HTMLMyComponentElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "my-component": JSXElements.MyComponentAttributes;
      }
  }
  namespace JSXElements {
      export interface MyComponentAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
          first?: string,
          last?: string
      }
  }
}

